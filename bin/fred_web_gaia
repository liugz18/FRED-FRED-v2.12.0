#!/usr/bin/perl
use strict;
use warnings;
use Env;
use MIME::Lite;
$| = 1;

my $FRED = $ENV{FRED_HOME};
die "Please set environmental variable FRED_HOME to location of FRED home directory\n" if not $FRED;

my ($key, $out, @titlelst) = @ARGV;
my $title = join " ", @titlelst;
system "date";
print "$key $out |$title|\n";
chdir $out or die "Can't chdir to directory $out\n";

# make a gaia map
if (0) {
print "\npypy $FRED/bin/fred_gaia_inputs.py -k $key  -v P -p -t static -T '$title'\n";
system "pypy $FRED/bin/fred_gaia_inputs.py -k $key  -v P -p -t static -T '$title' ";
system "rm -f gaia*.txt out.xml";
my $mapfile = "$out/gaia_input_static_$key\_P_sum_percents.png";
if (-e $mapfile) {
  print "mv $mapfile $out/incidence_map.png\n";
  system "mv $mapfile $out/incidence_map.png";
}
else {
  die "Map file |$mapfile| not found\n";
}
print "map finished at ", scalar localtime, "\n\n";
}

# make a gaia move
print "\npypy $FRED/bin/fred_gaia_inputs.py -k $key -v P -p -m mov -t animated -T '$title'\n";
system "pypy $FRED/bin/fred_gaia_inputs.py -k $key -v P -p -m mov -t animated -T '$title' ";
system "rm -f gaia*.txt out.xml";
my $moviefile = "gaia_input_animated_$key\_P_sum_percents.mov";
if (-e $moviefile) {
  print "mv $moviefile prevalence_movie.mov\n";
  system "mv $moviefile prevalence_movie.mov";
}
else {
  die "Movie file |$moviefile| not found\n";
}
print "movie finished at ", scalar localtime, "\n\n";
exit;
