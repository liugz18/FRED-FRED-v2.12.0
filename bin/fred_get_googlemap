#!/usr/bin/perl
use strict;
use warnings;
use Geo::GoogleMaps::FitBoundsZoomer;
use Env;

my $FRED = $ENV{FRED_HOME};
die "$0: Please set environmental variable FRED_HOME to location of FRED home directory\n" if not $FRED;

my $gxsize = 640;
my $gysize = 640;
my $usage = "usage: $0 bottom left top right filename\n";

# my $api_key = $ENV{FRED_API_KEY};
# print "$api_key\n";

open BB, "BBOX";
my $bottom = <BB>;
chomp $bottom;
$bottom =~ s/.*= //;
my $left = <BB>;
chomp $left;
$left =~ s/.*= //;
my $top = <BB>;
chomp $top;
$top =~ s/.*= //;
my $right = <BB>;
chomp $right;
$right =~ s/.*= //;
close BB;

my $file = "googlemap.png";
unlink $file;

my ($api_key, $lightness) = @ARGV;
$lightness = 0 if not $lightness;
$api_key = "none" if not $api_key;

# used in FRED/measles

my $my_style = "lightness:0&feature:road|visibility:simplified&style=feature:poi|visibility:off&style=feature:administrative.locality|visibility:off&style=feature:administrative.neighborhood:off";

if ($lightness>0) {
  $my_style = "lightness:25&feature:road|visibility:simplified&style=feature:poi|visibility:off&style=feature:administrative.locality|visibility:off&style=feature:administrative.neighborhood:off";
}


my $cmd = "";

# find bbox in google map
my $zoomer = Geo::GoogleMaps::FitBoundsZoomer::->new();
my @map_points =  ( 
   {'lat' => $bottom, 'long' => $left},
   {'lat' => $top, 'long' => $right},
  );
my $map_height_pixels = $gysize;
my $map_width_pixels  = $gxsize;
my $zoom = $zoomer->max_bounding_zoom( points => \@map_points,
				       height => $map_height_pixels,
				       width  => $map_width_pixels );
my $center = $zoomer->bounding_box_center();
my $lat = $$center{lat};
my $lon = $$center{long};
# print "zoom = $zoom\n";
# print "center: $lat $lon\n";

# google static map API url
my $url = "https://maps.googleapis.com/maps/api/staticmap?key=$api_key&center=$lat,$lon&format=png&size=${map_height_pixels}x${map_width_pixels}&zoom=$zoom&$my_style";
print "$url\n";

# get tmp image
my $tmpimage = "google-$$.png";
$cmd = "curl '$url' > $tmpimage";
system $cmd;

# find corner of image
my $b = $bottom;
my $t = $top;
my $z = $zoom;
my $lt = $lat;
my $ln = $lon;
my $gbottom = $b;
my $gtop = $t;
# printf "$b $t $z $zoom $lt $lat $ln $lon\n";
while ($z eq $zoom and $lt eq $lat and $ln = $lon) {
  $gbottom = $b;
  $gtop = $t;
  $b -= 0.001;
  $t += 0.001;
  $zoomer = Geo::GoogleMaps::FitBoundsZoomer->new();
  $z = $zoomer->max_bounding_zoom( points => [{lat=>$b, long=>$left}, {lat=>$t, long=>$right}],
				   height => $map_height_pixels,
				   width  => $map_width_pixels );
  my $c = $zoomer->bounding_box_center();
  $lt = $$c{lat};
  $ln = $$c{long};
  # printf "$b $t $z $zoom $lt $lat $ln $lon\n";
}

my $lf = $left;
my $rt = $right;
$z = $zoom;
$lt = $lat;
$ln = $lon;
my $gright = $rt;
my $gleft = $lf;
# printf "$b $t $z $zoom $lt $lat $ln $lon\n";
while ($z eq $zoom and $lt eq $lat and $ln = $lon) {
  $gleft = $lf;
  $gright = $rt;
  $lf -= 0.001;
  $rt += 0.001;
  $zoomer = Geo::GoogleMaps::FitBoundsZoomer->new();
  $z = $zoomer->max_bounding_zoom( points => [{lat=>$gbottom, long=>$lf}, {lat=>$gtop, long=>$rt}],
				   height => $map_height_pixels,
				   width  => $map_width_pixels );
  my $c = $zoomer->bounding_box_center();
  $lt = $$c{lat};
  $ln = $$c{long};
  # printf "$b $t $z $zoom $lt $lat $ln $lon\n";
}

# print "ymin = $gbottom\nxmin = $gleft\nymax = $gtop\nxmax = $gright\n";

my $tmpcrop = "crop-$$.png";
my $xrange = $right-$left;
my $yrange = $top-$bottom;
my $gxrange = $gright-$gleft;
my $gyrange = $gtop-$gbottom;
my $xsize = int($gxsize*$xrange/$gxrange);
my $ysize = int($gysize*$yrange/$gyrange);
my $xoffset = int(0.5*($gxsize-$xsize));
my $yoffset = int(0.5*($gysize-$ysize));
# print "want $xrange $yrange got $gxrange $gyrange size $xsize $ysize\n";
 
$cmd = "convert -antialias -size ${gxsize}x${gysize} -depth 8 -extract ${xsize}x${ysize}+$xoffset+$yoffset $tmpimage $tmpcrop";
# print "fred_get_googlemap: $cmd\n";
system "$cmd";

my $y = 498.0;
my $x = 640.0;

my $xres = int(72*($x/$xsize));
my $yres = int(72*($y/$ysize));
$cmd = "convert -resample ${xres}x${yres} $tmpcrop $file";
# print "fred_get_googlemap: $cmd\n";
system "$cmd";

unlink $tmpimage;
unlink $tmpcrop;

exit;

