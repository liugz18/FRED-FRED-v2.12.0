#!/usr/bin/perl
use strict;
use warnings;
use Env;
$| = 1;  # AUTO_FLUSH

# File: fred_post_process
# Author: John Grefenstette
# Created: Aug 07, 2012

my ($out, $tables) = @ARGV;
$out = "OUT" if not $out;
die "$0: $out not found\n" if not -d $out;
$tables = "TABLES" if not $tables;
mkdir $tables if not -d $tables;
die "$0: $tables not found\n" if not -d $tables;

# list of variable names (set in get_tables)
my @varname = ();

# create table for each variable and for each run
get_tables($out,$tables);

# create a file with all variable names
open VAR,">$tables/VARS";
print VAR "$_\n" for sort @varname;
close VAR;

for my $var (@varname) {
  get_weekly_tables($tables,$var);
}

for my $var (@varname) {
  get_stats($tables,$var);
  next if ($var eq "Day" or $var eq "Date" or $var eq "Week" or $var eq "Year" or $var eq "WkDay");
  get_stats($tables,"Weekly_$var");
}

###################################

sub get_tables {
  my ($out, $tables) = @_;

  # get the outfiles
  opendir DIR, $out or die "ERROR OPENING DIRECTORY $out\n";
  my @outfiles = ();
  while (my $file = readdir(DIR)) {
    # print "file = |$file|\n";
    if ($file =~ /^out/) {
      my $outfile = "$out/$file";
      # print "outfile = $outfile\n";
      extract_from_outfile($outfile, $tables);
    }
  }
  closedir DIR;
}

sub extract_from_outfile {
  my ($outfile,$tables) = @_;
  open FH, $outfile or die "$0: ERROR READING $outfile\n";

  my ($run) = $outfile =~ /out(\d+).txt/;
  # array of variable names
  @varname = ();
  # two dimensional array of values
  my @value = ();
  my $rows = 0;
  my $fields = 0;
  while (my $line = <FH>) {
    chomp $line;
    my $col = 0;
    my @a = split " ", $line;
    $fields = scalar @a / 2;
    for (my $col = 0; $col < $fields; $col++) {
      my $var = $a[2*$col];
      my $val = $a[2*$col+1];
      if ($rows == 0) {
	push @varname, $var;
      }
      $value[$rows][$col] = $val;;
    }
    $rows++;
  }
  close FH;

  # create tables for individual variables from this outfile
  for (my $col = 0; $col < $fields; $col++) {
    my $table = "$tables/" . $varname[$col] . "-$run.txt";
    open TABLE,">$table";
    my $var = $varname[$col];
    print TABLE "$var\n";
    for (my $row = 0; $row < $rows; $row++) {
      print TABLE "$value[$row][$col]\n";
    }
    close TABLE;
  }
}

###############################################

my %sum_up = (
	      C => 1,
	      College => 1,
	      Cs => 1,
	      GQ => 1,
	      Military => 1,
	      Nursing_Home => 1,
	      Prison => 1,
	      ScCl => 1
);

sub get_weekly_tables {
  my ($tables,$var) = @_;
  if ($var eq "Day" or $var eq "Date" or $var eq "Week" or $var eq "Year" or $var eq "WkDay") {
    return;
  }
  my $print_sum = exists $sum_up{$var};
  my $ls = `ls $tables/$var-*.txt`;
  chomp $ls;
  my @files = split " ", $ls;
  for my $file (@files) {
    $file =~ s/$tables\///;
    my ($run) = $file =~ /\-(\d+).txt/;
    my @week = ();
    open FH, "$tables/Week-$run.txt";
    open YR, "$tables/Year-$run.txt";
    <FH>;
    <YR>;
    while (my $wk = <FH>) {
      chomp $wk;
      my $yr = <YR>;
      push @week, "$wk $yr";
    }
    close FH;

    my $outfile = "$tables/Weekly_$file";
    my $weekfile = "$tables/Weekly-$run.txt";
    open WEEK,">$weekfile" or die "$0: ERROR OPENING $weekfile\n";
    open OUT,">$outfile" or die "$0: ERROR OPENING $outfile\n";

    my @data = ();
    open FH,"$tables/$file";
    my $head = <FH>;
    chomp $head;
    print WEEK "Week Year Days\n";
    print OUT "$head\n";
    my $i = 0;
    my ($wk, $yr) = split " ", $week[0];
    my $sum = 0;
    my $days = 0;
    while (my $x = <FH>) {
      chomp $x;
      my ($w, $y) = split " ", $week[$i];
      if ($w ne $wk) {
	print WEEK "$wk $yr $days\n";
	if ($print_sum) {
	  print OUT "$sum\n";
	}
	else {
	  print OUT (1.0*$sum)/(1.0*$days), "\n";
	}
	$wk = $w;
	$yr = $y;
	$sum = $x;
	$days = 1;
      } else {
	$sum += $x;
	$days++;
      }
      $i++;
    }
    print WEEK "$wk $yr $days\n";
    if ($print_sum) {
      print OUT "$sum\n";
    }
    else {
      print OUT (1.0*$sum)/(1.0*$days), "\n";
    }
    close FH;
    close WEEK;
    close OUT;
  }
}

###################################

sub get_stats {
  my ($tables,$var) = @_;
  if ($var eq "Day" or $var eq "Date" or $var eq "Week" or $var eq "Year" or $var eq "WkDay") {
    system "cp $tables/$var-1.txt $tables/$var.txt";
    return;
  }
  my $ls = `ls $tables/$var-*.txt`;
  chomp $ls;
  my @files = split " ", $ls;
  # print "$_\n" for @files;
  my $n = scalar @files;
  my @sum = ();
  my @sumsq = ();
  my $rows = 0;
  for my $file (@files) {
    open FH, $file;
    # ignore header
    <FH>;
    $rows = 0;
    while (my $x = <FH>) {
      chomp $x;
      $sum[$rows] = 0 if not exists $sum[$rows];
      $sumsq[$rows] = 0 if not exists $sumsq[$rows];
      $sum[$rows] += $x;
      $sumsq[$rows] += $x*$x;
      $rows++;
    }
    close FH;
  }

  my $statfile = "$tables/$var.txt";
  open STAT,">$statfile";
  print STAT "$var\_mean $var\_std Runs\n";
  for (my $i = 0; $i < $rows; $i++) {
    my $mean = 0.0;
    $mean = $sum[$i]/$n if $n > 0;
    my $stdev = 0.0;
    my $square = 0.0;
    $square = (($n*$sumsq[$i] - $sum[$i]*$sum[$i])/($n*($n-1))) if $n>1;
    $stdev = sqrt($square) if $square > 0.000000001;
    print STAT "$mean $stdev $n\n";
  }
  close STAT;
}


