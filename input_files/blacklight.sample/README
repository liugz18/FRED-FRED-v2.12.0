
File: README
Author: John Grefenstette
Created: 14 Nov 2013

Purpose: This file contains some hints about running jobs on Blacklight.

INSTALLING FRED

It is suggested that you install FRED on $SCRATCH, e.g.:

% cd $SCRATCH
% cvs co FRED

Set your FRED_HOME environmental variable to $SCRATCH/FRED, then test
the installation:

% rt

After the initial installation, you should update FRED from CVS using
the commands:

% cd $FRED_HOME

# update all FRED files and directory:
% cvs update -APd

# test the updated FRED:
% make
% rt

PARAMETERS

Unless you plan to run exclusively on the Allegheny County population,
add the following line to your parameter file. It points to the full
population database installed on Blacklight:

synthetic_population_directory = /brashear/projects/midas/FRED_INPUTS

When running a large number of jobs on Blacklight, following parameters
are recommended:

rotate_start_date = 1
verbose = 0
quality_control = 0
enable_copy_files = 1

When simulating a large geogrpahical area (e.g., larger than a
metropolitan area), you may want to use:

enable_travel = 1

When simulating regions other than the continental United States, it's a
good idea to adjust the geographical projection:

use_mean_latitude = 1


CREATING A JOB FILE

The following steps are shown in the example METHODS file.

STEP 1: Remove any unwanted files
% rm -rf PARAMDIR TASKDIR BATCHDIR OUT 


STEP 2: Create a list of tasks.

Step 2A. Recommended approach: Use fred_experiment_space, as follows:

% fred_experiment_space -s > config

Edit the file to specify the desired set of parameter values:

% emacs config

Run the command:

% fred_experiment_space -n $runs -m 1 -c 1 -d 0 -f config -r RESULTS.$cores

This command creates one params file for each combination of parameter
values specified in the config file and put the resulting params files
in PARAMDIR, each with a key that specifies the parameter values for
that file. It also creates one "task" per params file, and puts the tasks
in directory TASKDIR. Each task has the same key as its corresponding
params file.

OPTIONS:
-n runs: requests given number of runs of FRED with each parameter file.
-m 1: run each task on a single core.
-c 1: save a copy of the RESULTS files in local directory. Otherwise
      the RESULTS files are deleted on Blacklight when the task
      completes.
-d 0: do not run fred_delete before fred_job. If not running on
      Blacklight, use -d 1.

The number of cores to use can be any multiple of 16, but requests for
more cores may spend a longer time in the queue.


Step 2B. Alternative approach: 

Create a directory called PARAMDIR containing a list of files called

params.<key1> ... params.<keyn>

Then run the following command:

% fred_make_tasks -n $runs -m 1 -c 1 -d 0 -p 

This command create one task per params file, and puts the tasks in
directory TASKDIR. Each task has the same key as its corresponding
params file.


Step 3. Create a Blacklight job file

% fred_make_qsub --task tasks.school_closure -n $batches -c $cores -j $jobname -t $timer

OPTIONS:

--task filename: the name of the file containing the task list.  If
                 you use fred_experiment_space to generate the tasks,
                 the tasks file will have the title of the experiment
                 space as a suffix. (This is set in the config file).
-c cores: request this many cores.
-j jobname: this is the name of the job as displayed in job queue.
-t 2:00:00: this requests 2 hours of run time. If tasks are still
            running beyond this time limit, they will be aborted.

HINTS:

Estimating Memory Request

Use at most one batch per cpu. If you have more than 8M agents, compute
the number of batches as follows:

batches = min(C, floor(8*C/P))

where C is the number of cores requested, 8*C is the total memory
requested (in GB), P is the population size (in millions).

For example, to run the PA populations (12M) on 64 cores, we have:

batches = min(64, floor(512/12)) = 42

Estimating Time Request

To estimate the time needed, first estimate the amount of time
required by a single task. A conservative estimate might be:

time_per_task = (5*P*n)/60

where P is the population size in millions, n is the number of runs per
task, and time_per_task is the number of hours.  Next, divide the number
of tasks by the number of batches to get the number of tasks per batch,
TPB.  The total time estimate (in hours) is:

time_request = ceil(time_per_task * ceil(TPB))

For example, to run the PA population on 80 tasks using 64 cores, where
each task uses 10 runs of FRED, we could use 40 batches, each with 5
tasks.  This gives:

time_per_task = (5*12*10)/60 = 10 hours.
time_request = 10*2 = 20 hours.

Notice that in the case it might be more efficient to requests 80 cores
for 10 hours, and run 80 batches, one per core.

Hopefully, this is too much time, and you can adjust future requests
based on the initial runs.


Step 4. Submit the job files to the Blacklight queueing system

% qsub -m abe -M $email $jobname > qsub.out

qsub options:

-m a|b|e|n
Defines the conditions under which a mail message will be sent about a
job. If "a", mail is sent when the job is aborted by the system. If "b",
mail is sent when the job begins execution. If "e", mail is sent when
the job ends. If "n",no mail is sent. This is the default.

-M userlist
Specifies the users to receive mail about the job. Userlist is a
comma-separated list of email addresses. If omitted, it defaults to the
user submitting the job. You should specify your full Internet email
address when using the -M option.


DATA COLLECTION

Two scripts are provided as examples of data collection:

./collect_task_data: this is called by each task to perform
task-specific data collection. The script takes the task key as its
argument. In the example file, collect_data writes the attack rate to
a file in the OUT directory.

./collect_job_data: this is called by the job script
(e.g. fred_schools.64 in the example) to perform any final data
collection.  For example, you could use this script to copy files from
the current directory to your home directory.

NOTES:
1. Files in $SCRATCH may be deleted after 21 days.
2. Your HOME directory on Blacklight is limited to 5GB, so consider
   transferring files to your local computer after eack Blacklight run.



