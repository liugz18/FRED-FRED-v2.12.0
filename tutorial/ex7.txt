FRED Exercises

7. RUNNING PARAMETER SWEEPS

It is a common task to run FRED over a range of parameter value, for
example, changing the value of a control measure to see the scope of its
effect.  The following example shows the process.

First create a file called params.base that contains parameters that are
fixed for all jobs in the parameter sweep.

% cat params.base
days = 100
fips = 42065
rotate_start_date = 1
influenza_residual_immunity_ages = 2 0 120
influenza_residual_immunity_values = 1 0.0
Immunization = -1

Next, create a configuration file, usually called config, that specifies
all the parameters to be swept. For example,

% cat config
#################################################                      
# Sample fred_make_params config file                                  
# Lines that starts with # are ignored.                                
#                                                                      
Baseline Parameter File: params.base

Sweep Parameters:
# the following illustrates a loop using min, max and increment:       
# name: R0 min: 1.0 max: 2.5 inc: 0.5  format: %0.1f                   
#                                                                      
# the following uses a comma-separated list of values,                 
# which may be strings (with no spaces)                                
# name: Weeks values: [0, 1, 2, 4, 6, 8]                               
#                                                                      
# the following read in a file of values, one per line                 
# name: test file: my_test_values.txt                                  
#                                                                      
Name: Immunization Min: 0.0 Max: 0.3 Inc: 0.1 Format: %0.1f
#################################################                      


The following command creates a set of parameter files, one for each
combination of sweep valriable values:

% fred_make_params -f config

The following command makes a file that creates one FRED job for each
parameter file. Each job will do 10 runs:

% fred_make_tasks -n 10

% cat tasks
TASKDIR/task.Immunization=0.0 > TASKDIR/task.Immunization=0.0.out
TASKDIR/task.Immunization=0.1 > TASKDIR/task.Immunization=0.1.out
TASKDIR/task.Immunization=0.2 > TASKDIR/task.Immunization=0.2.out
TASKDIR/task.Immunization=0.3 > TASKDIR/task.Immunization=0.3.out

Now we can execute the list of tasks, and get a cup of coffee:

% tasks &

Each tasks creates a new FRED job whose key is constructed from the
sweep variables:

% fred_jobs
KEY = Immunization=0.0 JOB = 1726 STATUS = FINISHED Mon Sep 29 21:28:08 2014
KEY = Immunization=0.1 JOB = 1727 STATUS = FINISHED Mon Sep 29 21:28:15 2014
KEY = Immunization=0.2 JOB = 1728 STATUS = FINISHED Mon Sep 29 21:28:23 2014
KEY = Immunization=0.3 JOB = 1729 STATUS = FINISHED Mon Sep 29 21:28:30 2014

When all the jobs are finished, we can use fred_plot to compare results
across the jobs. To see the differences in attack rate, use the command:

% fred_plot -v AR -T "Immunization Study" -k Immunization=0.0 \
  	    -k Immunization=0.1 -k Immunization=0.2 -k Immunization=0.3

To see the incidence curves, use the command:

% fred_plot -v C --week -T "Immunization Study" -k Immunization=0.0 \
  	    -k Immunization=0.1 -k Immunization=0.2 -k Immunization=0.3

Challenge: Find out which of the jobs has the most variation in attack
rate across the runs. What is a possible source of the variation?
(Hint: use the -e option in fred_plot.)

NOTES:
